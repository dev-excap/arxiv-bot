name: Publish output MD to github pages

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Run daily arxiv"]
    types:
      - completed

permissions: write-all

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    outputs:
      file-exists: ${{ steps.file-check.outputs.file_exists }}
    steps:
    - uses: actions/checkout@v4

    # List all artifacts available
    # ✅ List all artifacts to debug
    - name: List available artifacts
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GH_PAT }}
        script: |
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: ${{ github.event.workflow_run.id }},
          });
          console.log("Available artifacts: ", artifacts.data.artifacts);
          for (const artifact of artifacts.data.artifacts) {
            console.log(`Name: ${artifact.name}, ID: ${artifact.id}`);
          }

    # ✅ Download artifact by name
    - name: Download artifact from previous workflow run
      id: download-artifact
      uses: actions/download-artifact@v4
      with:
        name: arxiv-scanner-outputs
        github-token: ${{ secrets.GH_PAT }}

    # ✅ Display downloaded files
    - name: Display structure of downloaded files
      run: ls -R
    - name: Display structure of downloaded files
      run: ls -R
    - name: Check for output.md
      id: check_files
      uses: andstor/file-existence-action@v3
      with:
        files: output.md
    - name: Convert output.md to pages
      uses: wranders/markdown-to-pages-action@v0.1
      if: steps.check_files.outputs.files_exists == 'true'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        file: output.md
    - uses: actions/upload-pages-artifact@v3
      if: steps.check_files.outputs.files_exists == 'true'
      with:
        path: dist
    - uses: actions/deploy-pages@v4
      if: steps.check_files.outputs.files_exists == 'true'
      id: deployment
